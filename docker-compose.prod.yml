version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        ENV: production
    container_name: django-backend-prod
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - db
    command: gunicorn myproject.wsgi:application --bind 0.0.0.0:8000 --workers 3
    networks:
      - backend_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs-frontend-prod
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - frontend_network
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1

  db:
    image: postgres:15-alpine
    container_name: postgres-db-prod
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend_network

networks:
  backend_network:
    driver: bridge
  frontend_network:
    driver: bridge

volumes:
  postgres_data: 